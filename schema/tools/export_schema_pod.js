const fs = require('fs');
const helpers = require('./helpers');
const path = require('path');

const entityHierarchyPath = path.resolve('../entityHierarchy/thing/Item');
const predicateHierarchyPath = path.resolve('../predicateHierarchy/predicate');
const outputFile = './autogenerated_database_schema.json';

let entityHierarchy = {};
let predicateHierarchy = {};
(async () => {
  await helpers.getHierarchy(entityHierarchyPath, entityHierarchy, entityHierarchyPath, 'Item');
  await helpers.getHierarchy(predicateHierarchyPath, predicateHierarchy, predicateHierarchyPath, 'predicate');

  let types = [];
  for (const entity of Object.keys(entityHierarchy)) {
    if (entity === 'Item') continue;
    let ancestry = helpers.getAncestry2(entityHierarchy[entity]['path'].split('/'));

    console.log('\n----------------', entity, ancestry)
    let propertiesIncludingInherited = []
    for (const _entity in ancestry) {
      console.log(_entity, entityHierarchy[_entity]['properties'])
      propertiesIncludingInherited.push(entityHierarchy[_entity]['properties'])
    }
    console.log(propertiesIncludingInherited.flat())

    let properties = [];
    for (const property of propertiesIncludingInherited.flat()) {
      if (predicateHierarchy[property]) {
        let dbtype;
        switch (predicateHierarchy[property]['expectedTypes']) {
          case 'string':
            dbtype = 'Text';
            break;
          case 'int':
            dbtype = 'Integer';
            break;
          case 'bool':
            dbtype = 'Bool';
            break;
          case 'float':
            dbtype = 'Real';
            break;
          default:
            dbtype = false;
        }
        if (dbtype) {
          properties.push({'name': property, 'dbtype': dbtype, 'indexed': false});
        }
      }
    }
    types.push({'name': entity, 'properties': properties});
  }

  console.log(JSON.stringify({'types': types}, null, 2));
  fs.writeFile(outputFile, JSON.stringify({'types': types}, null, 2), (err) => {
    if (err) throw err;
    console.log('File saved as ' + outputFile);
  });
})();
